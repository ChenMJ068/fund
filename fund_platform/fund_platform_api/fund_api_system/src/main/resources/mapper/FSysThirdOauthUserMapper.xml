<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.FSysThirdOauthUserMapper">
  <resultMap id="BaseResultMap" type="com.fund.platform.bean.FSysThirdOauthUser">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="available" jdbcType="INTEGER" property="available" />
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="uuid" jdbcType="VARCHAR" property="uuid" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="blog" jdbcType="VARCHAR" property="blog" />
    <result column="company" jdbcType="VARCHAR" property="company" />
    <result column="location" jdbcType="VARCHAR" property="location" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="gender" jdbcType="VARCHAR" property="gender" />
    <result column="source" jdbcType="VARCHAR" property="source" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="state" jdbcType="VARCHAR" property="state" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.fund.platform.bean.FSysThirdOauthUserWithBLOBs">
    <result column="token" jdbcType="LONGVARCHAR" property="token" />
    <result column="raw_user_info" jdbcType="LONGVARCHAR" property="rawUserInfo" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, create_by, update_by, create_date, update_date, version, available, is_deleted, 
    remark, uuid, username, nickname, avatar, blog, company, location, email, gender, 
    source, user_id, state
  </sql>
  <sql id="Blob_Column_List">
    token, raw_user_info
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.fund.platform.bean.FSysThirdOauthUserExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from f_sys_third_oauth_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.fund.platform.bean.FSysThirdOauthUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from f_sys_third_oauth_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from f_sys_third_oauth_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from f_sys_third_oauth_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.fund.platform.bean.FSysThirdOauthUserExample">
    delete from f_sys_third_oauth_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fund.platform.bean.FSysThirdOauthUserWithBLOBs">
    insert into f_sys_third_oauth_user (id, create_by, update_by, 
      create_date, update_date, version, 
      available, is_deleted, remark, 
      uuid, username, nickname, 
      avatar, blog, company, 
      location, email, gender, 
      source, user_id, state, 
      token, raw_user_info)
    values (#{id,jdbcType=BIGINT}, #{createBy,jdbcType=VARCHAR}, #{updateBy,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}, #{version,jdbcType=INTEGER}, 
      #{available,jdbcType=INTEGER}, #{isDeleted,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, 
      #{uuid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, 
      #{avatar,jdbcType=VARCHAR}, #{blog,jdbcType=VARCHAR}, #{company,jdbcType=VARCHAR}, 
      #{location,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR}, 
      #{source,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT}, #{state,jdbcType=VARCHAR}, 
      #{token,jdbcType=LONGVARCHAR}, #{rawUserInfo,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.fund.platform.bean.FSysThirdOauthUserWithBLOBs">
    insert into f_sys_third_oauth_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="available != null">
        available,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="uuid != null">
        uuid,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="blog != null">
        blog,
      </if>
      <if test="company != null">
        company,
      </if>
      <if test="location != null">
        location,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="source != null">
        source,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="token != null">
        token,
      </if>
      <if test="rawUserInfo != null">
        raw_user_info,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="available != null">
        #{available,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="blog != null">
        #{blog,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="location != null">
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="source != null">
        #{source,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        #{token,jdbcType=LONGVARCHAR},
      </if>
      <if test="rawUserInfo != null">
        #{rawUserInfo,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fund.platform.bean.FSysThirdOauthUserExample" resultType="java.lang.Integer">
    select count(*) from f_sys_third_oauth_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update f_sys_third_oauth_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateBy != null">
        update_by = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateDate != null">
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.available != null">
        available = #{record.available,jdbcType=INTEGER},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.uuid != null">
        uuid = #{record.uuid,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null">
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.avatar != null">
        avatar = #{record.avatar,jdbcType=VARCHAR},
      </if>
      <if test="record.blog != null">
        blog = #{record.blog,jdbcType=VARCHAR},
      </if>
      <if test="record.company != null">
        company = #{record.company,jdbcType=VARCHAR},
      </if>
      <if test="record.location != null">
        location = #{record.location,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=VARCHAR},
      </if>
      <if test="record.source != null">
        source = #{record.source,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.token != null">
        token = #{record.token,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.rawUserInfo != null">
        raw_user_info = #{record.rawUserInfo,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update f_sys_third_oauth_user
    set id = #{record.id,jdbcType=BIGINT},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      update_by = #{record.updateBy,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      version = #{record.version,jdbcType=INTEGER},
      available = #{record.available,jdbcType=INTEGER},
      is_deleted = #{record.isDeleted,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      uuid = #{record.uuid,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      avatar = #{record.avatar,jdbcType=VARCHAR},
      blog = #{record.blog,jdbcType=VARCHAR},
      company = #{record.company,jdbcType=VARCHAR},
      location = #{record.location,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=VARCHAR},
      source = #{record.source,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=BIGINT},
      state = #{record.state,jdbcType=VARCHAR},
      token = #{record.token,jdbcType=LONGVARCHAR},
      raw_user_info = #{record.rawUserInfo,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update f_sys_third_oauth_user
    set id = #{record.id,jdbcType=BIGINT},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      update_by = #{record.updateBy,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      version = #{record.version,jdbcType=INTEGER},
      available = #{record.available,jdbcType=INTEGER},
      is_deleted = #{record.isDeleted,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      uuid = #{record.uuid,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      avatar = #{record.avatar,jdbcType=VARCHAR},
      blog = #{record.blog,jdbcType=VARCHAR},
      company = #{record.company,jdbcType=VARCHAR},
      location = #{record.location,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=VARCHAR},
      source = #{record.source,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=BIGINT},
      state = #{record.state,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fund.platform.bean.FSysThirdOauthUserWithBLOBs">
    update f_sys_third_oauth_user
    <set>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="available != null">
        available = #{available,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="uuid != null">
        uuid = #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="blog != null">
        blog = #{blog,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        company = #{company,jdbcType=VARCHAR},
      </if>
      <if test="location != null">
        location = #{location,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="source != null">
        source = #{source,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        token = #{token,jdbcType=LONGVARCHAR},
      </if>
      <if test="rawUserInfo != null">
        raw_user_info = #{rawUserInfo,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.fund.platform.bean.FSysThirdOauthUserWithBLOBs">
    update f_sys_third_oauth_user
    set create_by = #{createBy,jdbcType=VARCHAR},
      update_by = #{updateBy,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=INTEGER},
      available = #{available,jdbcType=INTEGER},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      uuid = #{uuid,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      blog = #{blog,jdbcType=VARCHAR},
      company = #{company,jdbcType=VARCHAR},
      location = #{location,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=VARCHAR},
      source = #{source,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      state = #{state,jdbcType=VARCHAR},
      token = #{token,jdbcType=LONGVARCHAR},
      raw_user_info = #{rawUserInfo,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fund.platform.bean.FSysThirdOauthUser">
    update f_sys_third_oauth_user
    set create_by = #{createBy,jdbcType=VARCHAR},
      update_by = #{updateBy,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=INTEGER},
      available = #{available,jdbcType=INTEGER},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      uuid = #{uuid,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      blog = #{blog,jdbcType=VARCHAR},
      company = #{company,jdbcType=VARCHAR},
      location = #{location,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=VARCHAR},
      source = #{source,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      state = #{state,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="com.fund.platform.bean.FSysThirdOauthUser">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="available" jdbcType="INTEGER" property="available" />
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="uuid" jdbcType="VARCHAR" property="uuid" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="blog" jdbcType="VARCHAR" property="blog" />
    <result column="company" jdbcType="VARCHAR" property="company" />
    <result column="location" jdbcType="VARCHAR" property="location" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="gender" jdbcType="VARCHAR" property="gender" />
    <result column="source" jdbcType="VARCHAR" property="source" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="state" jdbcType="VARCHAR" property="state" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.fund.platform.bean.FSysThirdOauthUserWithBLOBs">
    <result column="token" jdbcType="LONGVARCHAR" property="token" />
    <result column="raw_user_info" jdbcType="LONGVARCHAR" property="rawUserInfo" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, create_by, update_by, create_date, update_date, version, available, is_deleted, 
    remark, uuid, username, nickname, avatar, blog, company, location, email, gender, 
    source, user_id, state
  </sql>
  <sql id="Blob_Column_List">
    token, raw_user_info
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.fund.platform.bean.FSysThirdOauthUserExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from f_sys_third_oauth_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.fund.platform.bean.FSysThirdOauthUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from f_sys_third_oauth_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from f_sys_third_oauth_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from f_sys_third_oauth_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.fund.platform.bean.FSysThirdOauthUserExample">
    delete from f_sys_third_oauth_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fund.platform.bean.FSysThirdOauthUserWithBLOBs">
    insert into f_sys_third_oauth_user (id, create_by, update_by, 
      create_date, update_date, version, 
      available, is_deleted, remark, 
      uuid, username, nickname, 
      avatar, blog, company, 
      location, email, gender, 
      source, user_id, state, 
      token, raw_user_info)
    values (#{id,jdbcType=BIGINT}, #{createBy,jdbcType=VARCHAR}, #{updateBy,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}, #{version,jdbcType=INTEGER}, 
      #{available,jdbcType=INTEGER}, #{isDeleted,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, 
      #{uuid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, 
      #{avatar,jdbcType=VARCHAR}, #{blog,jdbcType=VARCHAR}, #{company,jdbcType=VARCHAR}, 
      #{location,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR}, 
      #{source,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT}, #{state,jdbcType=VARCHAR}, 
      #{token,jdbcType=LONGVARCHAR}, #{rawUserInfo,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.fund.platform.bean.FSysThirdOauthUserWithBLOBs">
    insert into f_sys_third_oauth_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="available != null">
        available,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="uuid != null">
        uuid,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="blog != null">
        blog,
      </if>
      <if test="company != null">
        company,
      </if>
      <if test="location != null">
        location,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="source != null">
        source,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="token != null">
        token,
      </if>
      <if test="rawUserInfo != null">
        raw_user_info,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="available != null">
        #{available,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="blog != null">
        #{blog,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="location != null">
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="source != null">
        #{source,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        #{token,jdbcType=LONGVARCHAR},
      </if>
      <if test="rawUserInfo != null">
        #{rawUserInfo,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fund.platform.bean.FSysThirdOauthUserExample" resultType="java.lang.Integer">
    select count(*) from f_sys_third_oauth_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update f_sys_third_oauth_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateBy != null">
        update_by = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateDate != null">
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.available != null">
        available = #{record.available,jdbcType=INTEGER},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.uuid != null">
        uuid = #{record.uuid,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null">
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.avatar != null">
        avatar = #{record.avatar,jdbcType=VARCHAR},
      </if>
      <if test="record.blog != null">
        blog = #{record.blog,jdbcType=VARCHAR},
      </if>
      <if test="record.company != null">
        company = #{record.company,jdbcType=VARCHAR},
      </if>
      <if test="record.location != null">
        location = #{record.location,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=VARCHAR},
      </if>
      <if test="record.source != null">
        source = #{record.source,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.token != null">
        token = #{record.token,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.rawUserInfo != null">
        raw_user_info = #{record.rawUserInfo,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update f_sys_third_oauth_user
    set id = #{record.id,jdbcType=BIGINT},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      update_by = #{record.updateBy,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      version = #{record.version,jdbcType=INTEGER},
      available = #{record.available,jdbcType=INTEGER},
      is_deleted = #{record.isDeleted,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      uuid = #{record.uuid,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      avatar = #{record.avatar,jdbcType=VARCHAR},
      blog = #{record.blog,jdbcType=VARCHAR},
      company = #{record.company,jdbcType=VARCHAR},
      location = #{record.location,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=VARCHAR},
      source = #{record.source,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=BIGINT},
      state = #{record.state,jdbcType=VARCHAR},
      token = #{record.token,jdbcType=LONGVARCHAR},
      raw_user_info = #{record.rawUserInfo,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update f_sys_third_oauth_user
    set id = #{record.id,jdbcType=BIGINT},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      update_by = #{record.updateBy,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      version = #{record.version,jdbcType=INTEGER},
      available = #{record.available,jdbcType=INTEGER},
      is_deleted = #{record.isDeleted,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      uuid = #{record.uuid,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      avatar = #{record.avatar,jdbcType=VARCHAR},
      blog = #{record.blog,jdbcType=VARCHAR},
      company = #{record.company,jdbcType=VARCHAR},
      location = #{record.location,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=VARCHAR},
      source = #{record.source,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=BIGINT},
      state = #{record.state,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fund.platform.bean.FSysThirdOauthUserWithBLOBs">
    update f_sys_third_oauth_user
    <set>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="available != null">
        available = #{available,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="uuid != null">
        uuid = #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="blog != null">
        blog = #{blog,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        company = #{company,jdbcType=VARCHAR},
      </if>
      <if test="location != null">
        location = #{location,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="source != null">
        source = #{source,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        token = #{token,jdbcType=LONGVARCHAR},
      </if>
      <if test="rawUserInfo != null">
        raw_user_info = #{rawUserInfo,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.fund.platform.bean.FSysThirdOauthUserWithBLOBs">
    update f_sys_third_oauth_user
    set create_by = #{createBy,jdbcType=VARCHAR},
      update_by = #{updateBy,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=INTEGER},
      available = #{available,jdbcType=INTEGER},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      uuid = #{uuid,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      blog = #{blog,jdbcType=VARCHAR},
      company = #{company,jdbcType=VARCHAR},
      location = #{location,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=VARCHAR},
      source = #{source,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      state = #{state,jdbcType=VARCHAR},
      token = #{token,jdbcType=LONGVARCHAR},
      raw_user_info = #{rawUserInfo,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fund.platform.bean.FSysThirdOauthUser">
    update f_sys_third_oauth_user
    set create_by = #{createBy,jdbcType=VARCHAR},
      update_by = #{updateBy,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=INTEGER},
      available = #{available,jdbcType=INTEGER},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      uuid = #{uuid,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      blog = #{blog,jdbcType=VARCHAR},
      company = #{company,jdbcType=VARCHAR},
      location = #{location,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=VARCHAR},
      source = #{source,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      state = #{state,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>